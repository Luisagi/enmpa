% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/independent_eval.R
\name{independent_eval}
\alias{independent_eval}
\title{Evaluate final models using an independent dataset.}
\usage{
independent_eval(
  data,
  prediction,
  threshold = NULL,
  crs,
  occ = "sp",
  xy = c("lon", "lat")
)
}
\arguments{
\item{data}{data.frame or matrix with the occurrence data and spatial
coordinates.}

\item{prediction}{\code{SpatRaster} object of a model prediction.}

\item{threshold}{(numeric) the lowest predicted probability value for an
occurrence point. This value must be defined for presences-only data.
Default = NULL.}

\item{crs}{(character) any Coordinate Reference System (CRS)
that \code{\link[terra]{vect}} function from \code{terra} accepts.}

\item{occ}{(character) column name of the \code{data} containing the
occurrence data.}

\item{xy}{(character) vector with the field names associated with the
geometry data, representing the x-y coordinates. Default = c("lon", "lat").}
}
\value{
data.frame or list containing evaluation results.
}
\description{
The function enables a final evaluation of model predictions using a dataset
that is independent of the one used for model calibration. The function is
designed to detect and calculate different evaluation metrics depending on
the type of occurrence data available: presences-only or presences-absences.
}
\examples{
# Independent test data based on coordinates (lon/lat WGS 84) from  presence
# and absences records
test <- read.csv(system.file("extdata", "test_data.csv", package = "enmpa"))
head(test)

# Loading a model prediction
pred <- terra::rast(system.file("extdata", "proj_out_wmean.tif", package = "enmpa"))
terra::plot(pred)

# Evaluation using presence-absence data
independent_eval(data = test, prediction = pred, occ = "Sp",
                 crs = "EPSG:4326", xy = c("lon", "lat"))

# Evaluation using presence-only data
test_p_only <- test[test$Sp == 1, ]
th_maxTSS   <- 0.1274123            # threshold based on the maxTSS

independent_eval(data = test_p_only, prediction = pred, threshold = th_maxTSS,
                 occ = "Sp", crs = "EPSG:4326", xy = c("lon", "lat"))

}
