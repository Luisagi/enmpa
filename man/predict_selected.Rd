% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_selected.R
\name{predict_selected}
\alias{predict_selected}
\title{Predict the selected models}
\usage{
predict_selected(
  x,
  newdata,
  clamping = FALSE,
  type = "response",
  consensus = TRUE,
  consensus_weights = NULL
)
}
\arguments{
\item{x}{a list of fitting models obtained by \code{\link{fit_glm}}.}

\item{newdata}{a \code{SpatRaster}, data.frame or matrix with the new data to
project the predictions.}

\item{clamping}{(logical) this option mitigates the risk of extreme
extrapolations when making model predictions for environmental conditions
beyond the calibrated data range. It employs the marginal values within the
calibration area to predict outcomes for more extreme conditions in transfer
areas. Default = FALSE.}

\item{type}{(character) the type of prediction required. For a default
binomial model the default predictions are of log-odds (probabilities on
logit scale) and type = "response" gives the predicted probabilities.}

\item{consensus}{(logical) whether to produce three consensus forecasts
(or “ensemble”) obtained by combining the forecasts from the collection the
selected models. By default consensuses are calculated from the mean and
median. To calculated weighted mean user must provide a weighting metric.
It is recommended the wAIC. Additionally, an consensus map of variance
is also calculated to measure the amount of variability or disagreement among
individuals consensus. Default = TRUE.}

\item{consensus_weights}{(numeric) vector with the metric to calculate a
weighted average consensus model. It is recommended the wAIC.}
}
\value{
An individual model predictions \code{SpatRaster} object,
and a consensus predictions \code{SpatRaster} object.
}
\description{
Wrapper function that facilitates the prediction of those models
selected as the most robust. In addition, it allows the calculation of
consensus models, when more than one model are selected.
}
\examples{
# Load species occurrences and environmental data.
enm_data <- read.csv(system.file("extdata", "pa_data.csv", package = "enmpa"))
head(enm_data)

# Load raster layers to be projected
env_vars <- terra::rast(system.file("extdata", "vars.tif", package = "enmpa"))
terra::plot(env_vars)

# Selected models
forms <- c("Sp ~ bio_1 + bio_12 + I(bio_1^2) + I(bio_12^2) + bio_1:bio_12",
           "Sp ~ bio_1 + I(bio_1^2) + I(bio_12^2) + bio_1:bio_12")

wAICs <- c(0.6248182, 0.3751818) # Akaike weights

# Fitting models
fits <- fit_glm(forms, data = enm_data )

# Predictions
preds <- predict_selected(x = fits, newdata = env_vars, consensus = TRUE,
                          consensus_weights = wAICs)

# Predictions of the two selected models in the area of interest
terra::plot(preds$predictions)

# Predictions of the consensus models using averaging approaches
terra::plot(preds$consensus,  mar = c(0, 0, 0, 5))

}
